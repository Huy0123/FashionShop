import React, { useContext, useEffect, useState } from 'react'
import { useParams } from 'react-router-dom'
import { ShopContext } from '../context/ShopContext'
import { assets } from '../assets/assets'
import RelatedProducts from '../components/RelatedProducts'
import TryOnModal from '../components/TryOnModal'


const Product = () => {
    
  const sizeGuideImages = {
    'T-shirt': assets.tshirt,
    'RelaxedFit': assets.tshirt,
    'Ringer': assets.ringer,
    'Hoodie': assets.hoodie,
    'Sweater': assets.sweeter,
    'Jogger': assets.pant,
   
  };
  const [tab, setTab] = useState('size');
  const [showTryOn, setShowTryOn] = useState(false);
  const toggleTab = (key) => {
    setTab(tab === key ? '' : key);
  };
  const { productId } = useParams();
  const { products, formatCurrency, AddToCart } = useContext(ShopContext);
  const [productData, setProductData] = useState(false);
  const [image, setImage] = useState('')
  const [size, setSize] = useState('')
  

  const fetchProductData = async () => {
    products.map((item) => {
      if (item._id === productId) {
        setProductData(item)
        setImage(item.image[0])
        return null;
      }
    })
  }
  useEffect(() => {
    fetchProductData();
  }, [productId, products])

  return productData ? (
    <div className='border-t-2 pt-10 transition-opacity ease-in duration-500 opacity-100'>
      {/*d·ªØ li·ªáu s·∫£n ph·∫´m */}
      <div className='flex gap-12 sm:gap-12 flex-col sm:flex-row'>
        {/*d·ªØ li·ªáu h√¨nh ·∫£nh */}
        <div className='flex-1 flex flex-col-reverse gap-3 sm:flex-row'>
          <div className='flex sm:flex-col overflow-x-auto sm:overflow-y-scroll justify-between sm:justify-normal sm:w-[18.7%] w-full'>
            {
              productData.image.map((item, index) => (
                <img onClick={() => setImage(item)} src={item} key={index} className='w-[24%] sm:w-full sm:mb-3 flex-shrink-0 cursor-pointer' alt="" />
              ))
            }
          </div>
          <div className='w-full sm:w-[80%]'>
            <img className='w-full h-aut0' src={image} alt="" />
          </div>
        </div>
        {/*th√¥ng tin s·∫£n ph·∫´m */}
        <div className='flex-1'>
          <h1 className='font-medium text-2xl my-2'>{productData.name}</h1>
          <div className='flex items-center gap-1 mt-2'>
            <img src={assets.star_icon} alt="" className="w-3 5" />
            <img src={assets.star_icon} alt="" className="w-3 5" />
            <img src={assets.star_icon} alt="" className="w-3 5" />
            <img src={assets.star_icon} alt="" className="w-3 5" />
            <img src={assets.star_dull_icon} alt="" className="w-3 5" />
            <p className='pl-2'>(245)</p>
          </div>
          <p className='mt-5 text-3xl font-medium'>{formatCurrency(productData.price)}</p>
          <p className='mt-5 text-gray-500 md:w-4/5'>{productData.description}</p>
          <div className='flex flex-col gap-4 my-8'>
            <p>K√≠ch c·ª°</p>
            <div className='flex gap-2'>
              {productData.sizes.map((item, index) => (
                <button onClick={() => setSize(item)} className={`border py-2 px-4 bg-gray-100 ${item == size ? 'border-black' : ''}`} key={index}>{item}</button>
              ))}
            </div>
          </div>
          <div className='flex flex-wrap gap-3 mt-2'>
            <button onClick={() => AddToCart(productData._id, size)} className='bg-black text-white px-8 py-3 text-sm active:bg-gray-700'>
              TH√äM V√ÄO GI·ªé</button>
            {/*n√∫t th·ª≠ ƒë·ªì */}
            <button 
              onClick={() => setShowTryOn(true)} 
              className='bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-8 py-3 text-sm rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg'>
              ü§ñ TH·ª¨ NGAY (AI)
            </button>
          </div>
          <hr className='mt-8 sm:w-4/5' />
          <div className='text-sm text-gray-500 mt-5 flex flex-col gap-1'>
            <p>Vui l√≤ng ki·ªÉm tra size c·∫©n th·∫≠n tr∆∞·ªõc khi ƒë·∫∑t h√†ng.</p>
            <p>Vui l√≤ng quay video khi m·ªü g√≥i h√†ng.</p>
            <p>C·ª≠a h√†ng ch·ªâ ch·∫•p nh·∫≠n ƒë·ªïi ho·∫∑c tr·∫£ l·∫°i √°o n·∫øu kh√°ch h√†ng c√≥ video.</p>

          </div>
          {/*c√°c h∆∞·ªõng d·∫´n */}
          <div className='mt-20 '>
            <div className='flex flex-col gap-2 w-full mx-auto'>
              {/* H∆Ø·ªöNG D·∫™N ƒê·∫∂T SIZE */}
              <button
                className={`flex items-center justify-between border px-5 py-3 text-sm w-full font-bold ${tab === 'size' ? ' border-black' : 'bg-white'}`}
                onClick={() => toggleTab('size')}
              >
                <span>H∆Ø·ªöNG D·∫™N CH·ªåN K√çCH C·ª†</span>
                <span>{tab === 'size' ? '‚ñ≤' : '‚ñº'}</span>
              </button>
              {tab === 'size' && (
                <div className='flex flex-col gap-2 border-l border-r border-b px-6 py-4 text-sm text-gray-700 items-center w-full '>
                  {sizeGuideImages[productData.productType] && (
                    <img src={sizeGuideImages[productData.productType]} alt={`B·∫£ng size ${productData.productType}`} className='max-w-md w-full mb-4' />
                  )}
                  <p>N·∫øu b·∫°n kh√¥ng ch·∫Øc, h√£y li√™n h·ªá shop ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n nh√©</p>
                </div>
              )}
              {/* B·∫¢O QU·∫¢N */}
              <button
                className={`flex items-center justify-between border px-5 py-3 text-sm w-full font-bold ${tab === 'care' ? 'border-black' : 'bg-white'}`}
                onClick={() => toggleTab('care')}
              >
                <span>B·∫¢O QU·∫¢N</span>
                <span>{tab === 'care' ? '‚ñ≤' : '‚ñº'}</span>
              </button>
              {tab === 'care' && (
                <div className='flex flex-col gap-2 border-l border-r border-b px-6 py-4 text-sm text-gray-700 w-full '>
                  <p>ƒê·ªÉ b·∫£o qu·∫£n s·∫£n ph·∫©m ƒë√∫ng c√°ch, lu√¥n m·ªõi v√† b·ªÅn ƒë·∫πp th√¨ b·∫°n n√™n gi·∫∑t ·ªü nhi·ªát ƒë·ªô th·∫•p, s·ª≠ d·ª•ng c√°c ch·∫ø ƒë·ªô v·∫Øt nh·∫π nh√†ng s·∫Ω c√≥ l·ª£i h∆°n cho s·∫£n ph·∫©m, gi√∫p duy tr√¨ m√†u s·∫Øc, h√¨nh d·∫°ng v√† c·∫•u tr√∫c c·ªßa v·∫£i.</p>
                  <p>+ Kh√¥ng s·ª≠ d·ª•ng n∆∞·ªõc t·∫©y / thu·ªëc t·∫©y</p>
                  <p>+ Ph∆°i s·∫£n ph·∫©m ·ªü n∆°i tho√°ng m√°t, tr√°nh √°nh n·∫Øng tr·ª±c ti·∫øp</p>
                  <p>+ ·ª¶i ·ªü nhi·ªát ƒë·ªô th·∫•p, kh√¥ng ·ªßi tr·ª±c ti·∫øp l√™n h·ªça ti·∫øt</p>
                  <p>+ L·ªôn tr√°i s·∫£n ph·∫©m khi gi·∫∑t v√† ph∆°i</p>
                </div>
              )}
              {/* CH√çNH S√ÅCH ƒê·ªîI TR·∫¢ */}
              <button
                className={`flex items-center justify-between border px-5 py-3 text-sm w-full font-bold ${tab === 'policy' ? 'border-black' : 'bg-white'}`}
                onClick={() => toggleTab('policy')}
              >
                <span>CH√çNH S√ÅCH ƒê·ªîI TR·∫¢</span>
                <span>{tab === 'policy' ? '‚ñ≤' : '‚ñº'}</span>
              </button>
              {tab === 'policy' && (
                <div className='flex flex-col gap-2 border-l border-r border-b px-6 py-4 text-sm text-gray-700 w-full '>
                  <p>+ Vui l√≤ng quay video khi m·ªü g√≥i h√†ng</p>
                  <p>+ C·ª≠a h√†ng ch·ªâ ch·∫•p nh·∫≠n ƒë·ªïi ho·∫∑c tr·∫£ l·∫°i √°o n·∫øu kh√°ch h√†ng c√≥ video</p>
                  <p>+ Giao h√†ng to√†n qu·ªëc, h·ªó tr·ª£ ƒë·ªïi tr·∫£ trong 3 ng√†y</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Try-On Modal */}
      {showTryOn && (
        <TryOnModal
          productImageUrl={image}
          productName={productData.name}
          onClose={() => setShowTryOn(false)}
        />
      )}
     
      {/*s·∫£n ph·∫´m li√™n quan*/}
      <RelatedProducts category={productData.category} subCategory={productData.subCategory} />
    </div>
  ) : <div className='opacity-0'></div>
}
export default Product